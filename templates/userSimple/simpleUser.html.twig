{% extends 'baseS.html.twig' %}
{% block title %}Offre Location
{% endblock %}
{% block body %}

	<div class="jumbotron">
		<div class="container">
			{{ form_start(formSerach) }}
			<div class="row">
				<div class="col-lg-8" id="map" style="width: 50%">
					<button class="btn btn-warning btn-sm" id="refreshButton" onclick="myFunction()">Actualiser</button>
				</div>
				<div class="col-lg-1"></div>
				<div class="col-lg-3">
					<div class="row">{{form_widget(formSerach.minPrix)}}</div>

				<br>
					<div class="row">{{ form_widget(formSerach.maxPrix) }}</div>

					<br>
					<div class="row ">{{form_widget(formSerach.minNbplace) }}</div>
					<br>
					<div class="row">
						<button class="btn btn-secondary">
							Rechercher</button>
					</div>
					<div class="row">{{ form_widget(formSerach.depart) }}</div>
					<div class="row">{{ form_widget(formSerach.destination) }}</div>

				</div>

			</div>
			{{ form_end(formSerach) }}

			<div class="row row-cols-2 row-cols-lg-4 g-2 g-lg-2 gx-2 mt-5 ">
				{% for offre in offres %}
					<div class="col">
						<div class="card  p-1">
							{% set location = 'location'%}
								{% if  offre.getOffreType().getType() == location  %}
								<div class="card-header">Location Moyenne Transport</div>
								<img src="{{ asset('uploads/' ~ offre.moyenneTransport.image ) }}" class="card-img-top" width="150px" height='150px'>
								<div class="card-body">
								<h5 class="card-title text-secondary">{{offre.moyenneTransport.nom }}</h5>
								<p class="card-text">Prix:
									{{offre.prix }} DT</p>
								<p class="card-text">pour
									{{offre.nbplace}} personnes</p>
									<div class="d-grid gap-2">
										<a href="{{path('DetailsLocationS', {'id' :offre.id} ) }}" class="btn btn-dark btn-sm">Detalis</a>
									</div>
								{% endif %}
								{% set Voyage_organiser = 'voyage_organiser'%}

								{% if  offre.getOffreType().getType() == Voyage_organiser  %}
									<div class="card-header">Voyage Organiser</div>
									<img src="{{ asset('uploads/' ~ offre.moyenneTransport.image ) }}" class="card-img-top" width="150px" height='150px'>
									<div class="card-body">
										<h5 class="card-title text-secondary">{{offre.moyenneTransport.nom }}</h5>
										<p class="card-text">Prix:
											{{offre.prix }} DT</p>
										<p class="card-text">Pour
											{{offre.nbplace}} personnes</p>
									<div class="d-grid gap-2">
										<a href="{{path('DetailsOrganiserS', {'id' :offre.id} ) }}" class="btn btn-dark btn-sm">Detalis</a>
									</div>
								{% endif %}

								{% set voyage_regulier = 'voyage_regulier'%}

								{% if  offre.getOffreType().getType() == voyage_regulier %}
										<div class="card-header">Voyage Regulier</div>
										<img src="{{ asset('uploads/' ~ offre.moyenneTransport.image ) }}" class="card-img-top" width="150px" height='150px'>
										<div class="card-body">
											<h5 class="card-title text-secondary">{{offre.moyenneTransport.nom }}</h5>
											<p class="card-text">Prix:
												{{offre.prix }} DT</p>
											<p class="card-text">Pour
												{{offre.nbplace}} personnes</p>
									<div class="d-grid gap-2">
										<a href="{{path('DetailsRegulierS', {'id' :offre.id} ) }}" class="btn btn-dark btn-sm">Detalis</a>
									</div>

								{% endif %}
							</div>

						</div>
					</div>
				{% endfor %}
			</div>
		</div>
	</div>
		</div>
	</div>
<script src="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.0/mapbox-gl-geocoder.min.js"></script>
<script src='https://api.tiles.mapbox.com/mapbox-gl-js/v2.2.0/mapbox-gl.js'></script>
<script>

mapboxgl.accessToken = 'pk.eyJ1IjoiaG91ZGFtYWJyb3VrIiwiYSI6ImNrcDMwYnZ1YTE5OHAycGxnejJ4aHgwYTMifQ.A9Sdf5GSoNH8zM-LD1bTbA';
var map = new mapboxgl.Map({
	container: 'map',
	style: 'mapbox://styles/mapbox/dark-v10',
	center: [9.561555499999997,33.892166],
	zoom: 6
});
map.addControl(
		new MapboxGeocoder({
			accessToken: mapboxgl.accessToken,
			//mapboxgl: mapboxgl
		})
);
var canvas = map.getCanvasContainer();

// an arbitrary start will always be the same
// only the end or destination will change
var start = [9.400138, 33.8439408];

// this is where the code for the next step will go
// create a function to make a directions request
function getRoute(end) {

	var url = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;

	// make an XHR request https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest
	var req = new XMLHttpRequest();
	req.open('GET', url, true);
	req.onload = function () {
		var json = JSON.parse(req.response);
		var data = json.routes[0];
		var route = data.geometry.coordinates;
		var geojson = {
			type: 'Feature',
			properties: {},
			geometry: {
				type: 'LineString',
				coordinates: route
			}
		};
		console.log(geojson)
		// if the route already exists on the map, reset it using setData
		if (map.getSource('route')) {
			map.getSource('route').setData(geojson);
		} else { // otherwise, make a new request
			map.addLayer({
				id: 'route',
				type: 'line',
				source: {
					type: 'geojson',
					data: {
						type: 'Feature',
						properties: {},
						geometry: {
							type: 'LineString',
							coordinates: geojson
						}
					}
				},
				layout: {
					'line-join': 'round',
					'line-cap': 'round'
				},
				paint: {
					'line-color': '#ffffff',
					'line-width': 5,
					'line-opacity': 0.75
				}
			});
		}
		// add turn instructions here at the end
	};
	req.send();
}

map.on('load', function () {
	// make an initial directions request that
	// starts and ends at the same location
	getRoute(start);

	map.on('click', function (e) {
		var coordsObj = e.lngLat;
		canvas.style.cursor = '';
		var coords = Object.keys(coordsObj).map(function (key) {
			return coordsObj[key];
		});
		var end = {
			type: 'FeatureCollection',
			features: [{
				type: 'Feature',
				properties: {},
				geometry: {
					type: 'Point',
					coordinates: coords
				}
			}
			]
		};
		if (map.getLayer('point')) {
			if (map.getLayer('end')) {
				map.getSource('end').setData(end);
			} else {

				map.addLayer({
					id: 'end',
					type: 'circle',
					source: {
						type: 'geojson',
						data: {
							type: 'FeatureCollection',
							features: [{
								type: 'Feature',
								properties: {},
								geometry: {
									type: 'Point',
									coordinates: coords
								}
							}]
						}
					},
					paint: {
						'circle-radius': 10,
						'circle-color': 'rgba(238,191,21,0.96)'
					}

				});
				document.querySelector('#destination').value = coords
			}
			getRoute(coords);
		}
		else {
			start = coords;
			/*var marker_end = new mapboxgl.Marker({ color: 'yellow', rotation: 0 })
                    .setLngLat(coords)
                    .addTo(map);*/
			map.addLayer({
				id: 'point',
				type: 'circle',
				source: {
					type: 'geojson',
					data: {
						type: 'FeatureCollection',
						features: [{
							type: 'Feature',
							properties: {},
							geometry: {
								type: 'Point',
								coordinates: coords
							}
						}
						]
					}
				},
				paint: {
					'circle-radius': 10,
					'circle-color': 'rgba(238,191,21,0.96)'
				}
			});

			document.querySelector('#depart').value = coords

		}
	});
});
//refresh button
var refresh = document.getElementById("refreshButton").onclick = function() {myFunction()};
function myFunction() {
	if (map.getLayer('end')){
		map.removeLayer('end');
		map.removeSource('end');
		document.getElementById("destination").value = null;

	}
	if (map.getLayer('point')){
		map.removeLayer('point');
		map.removeSource('point');
		document.getElementById("depart").value =null;
	}
	if (map.getLayer('route')){
		map.removeLayer('route');
		map.removeSource('route');
	}
}

</script>
{% endblock %}
